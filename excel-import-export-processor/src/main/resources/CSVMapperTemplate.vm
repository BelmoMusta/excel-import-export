package $wrapper.aPackage;
#if(!$config.useFQNs)
import $config.abstractCSVExporterFullClassName;
import $config.arrayListFullClassName;
import $config.collectionFullClassName;
import $wrapper.className;

#end
public class ${wrapper.simplifiedClassName}CSVExporter extends ${config.abstractCSVExporterClassName}<$config.currentClassName> {

    @Override
    protected ${config.collectionClassName}<$config.stringClassName> getEntries(${config.currentClassName} object) {
        final ${config.collectionClassName}<$config.stringClassName> cells = new ${config.arrayListClassName}<>();
#foreach($pair in $wrapper.correspondanceFieldMethod)
        cells.add(valueOf(object.${pair.method}()));
#end
        return cells;
   }
#if($wrapper.withHeaders)

    @Override
    protected ${config.collectionClassName}<$config.stringClassName> getHeaderEntries() {
        final ${config.collectionClassName}<$config.stringClassName> headers = new ${config.arrayListClassName}<>();
#foreach($header in $wrapper.correspondanceFieldMethod)
        headers.add("${header.name}");
#end
        return headers;
    }
#end

    @Override
    public $config.stringClassName getClassName(){
        return ${config.currentClassName}.class.getName();
    }
    @Override
    public $config.stringClassName getSimpleClassName(){
        return ${config.currentClassName}.class.getSimpleName();
    }
}