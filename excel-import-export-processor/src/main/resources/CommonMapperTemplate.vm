
package $wrapper.aPackage;

#if(!$config.useFQNs)
import $config.fullCurrentClassName;
import $classToImport;
#parse("FormatterImports.vm")
import $config.listFullClassName;
import $config.arraysFullClassName;

#end
public class ${wrapper.simplifiedClassName}${exporterName} extends ${classToExtend}<$config.currentClassName> {
#parse("FormatterAttributes.vm")

    @Override
    public $config.listClassName<$config.stringClassName> getHeadersEntries() {
#if($wrapper.withHeaders)
         return ${config.arraysClassName}.asList(
#foreach($i in $wrapper.correspondanceFieldMethod)
#if($velocityCount==$wrapper.correspondanceFieldMethod.size())
                "$i.name");
#else
                "$i.name",
#end
#end

#else
        return ${config.arraysClassName}.asList();
#end
    }

    @Override
    public $config.listClassName<$config.stringClassName> getRowEntries($config.currentClassName object) {
        return ${config.arraysClassName}.asList(
#foreach($pair in $wrapper.correspondanceFieldMethod)
#if($pair.formatter)
#set( $formatter = ", ${pair.formatter.instanceName}" )
#else
#set( $formatter = "" )
#end
#if($velocityCount==$wrapper.correspondanceFieldMethod.size())
                valueOf(object.${pair.method}()${formatter}));
#else
                valueOf(object.${pair.method}()${formatter}),
#end
#end

    }

#parse("ClassNameMethod.vm")

}
