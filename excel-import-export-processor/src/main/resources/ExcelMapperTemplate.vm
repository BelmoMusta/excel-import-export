package $wrapper.aPackage;
#if(!$config.useFQNs)
import $config.fullCurrentClassName;
import $config.abstractExcelMapperFullClassName;
import $config.rowFullClassName;
import $config.sheetFullClassName;
#end

public class ${wrapper.simplifiedClassName}ExcelMapper extends $config.abstractExcelMapperClassName<$config.currentClassName> {

#if($wrapper.withHeaders)
    @Override
    protected void writeHeaders($config.sheetClassName sheet) {
        final $config.rowClassName header = sheet.createRow(0);
#foreach($header in $wrapper.correspondanceFieldMethod)
#if($header.ordered)
        addCellWithValue(header, $header.order, "${header.name}");
#else
        addCellWithValue(header, "${header.name}");
#end
#end
    }
#end

    @Override
    protected void createRows($config.sheetClassName sheet, $config.currentClassName data) {
        final $config.rowClassName row = sheet.createRow(sheet.getLastRowNum() + 1);
#foreach($pair in $wrapper.correspondanceFieldMethod)
#if($pair.ordered)
        addCellWithValue(row, $pair.order, valueOf(data.${pair.method}()));
#else
        addCellWithValue(row, valueOf(data.${pair.method}()));
#end
#end
    }

    @Override
    public $config.stringClassName getClassName(){
        return ${config.currentClassName}.class.getName();
    }
}
